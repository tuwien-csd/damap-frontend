@use 'node_modules/@angular/material/index' as mat;
// Plus imports for other components in your app.
// Depending on your layout you will want to include your own palettes or import an
// Angular Material prebuilt theme of your choice.
@import 'apps/damap-frontend/src/themes/custom-palettes';

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
@include mat.strong-focus-indicators();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

$app-primary: mat.define-palette($custom-primary-color);
$app-accent: mat.define-palette($custom-accent-color);
/* You can also replace the lines above and use Angular Material colors instead: */
//$app-primary: mat.define-palette(mat.$deep-purple-palette);
//$app-accent: mat.define-palette(mat.$amber-palette);

// The warn palette is optional (defaults to red).
$app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as `color` or `typography`.
$app-light-theme: mat.define-light-theme($app-primary, $app-accent, $app-warn);
$app-dark-theme: mat.define-dark-theme($app-primary, $app-accent, $app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($app-light-theme);
@include mat.strong-focus-indicators-theme($app-light-theme);
.dark-theme {
  @include mat.all-component-colors($app-dark-theme);
  @include mat.strong-focus-indicators-theme($app-dark-theme);
}
